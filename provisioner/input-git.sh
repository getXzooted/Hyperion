#!/bin/bash
#
# input-git.sh 
# Separating the Git Login logic for future


set -e

# --- Configuration ---
PRIVATE_CONFIG_DIR="/etc/hyperion/config"
PUBLIC_REPO_URL="https://github.com/getXzooted/Hyperion"
COMPONENTS_DIR="/opt/Hyperion/components"


# --- Main Logic ---
echo "--- Hyperion Custom Deployment Engine ---"


# 1. Get Credentials
echo "  ---------> Please provide your GitHub credentials to clone your private config repository."
read -p "Enter your GitHub Username: " GITHUB_USER
read -s -p "Enter your GitHub Personal Access Token (PAT): " GITHUB_PAT
echo


# 2. Clone Private Repo
echo "  ---------> Cloning repositories <---------  "
rm -rf /etc/hyperion
mkdir -p /etc/hyperion
git clone "https://_:${GITHUB_PAT}@github.com/${GITHUB_USER}/Hyperion-config.git" /etc/hyperion/config

echo "  ---------> Git Connection Made Installing Custom Deployment <---------  "

# 3. Read User's Config
CONFIG_FILE="${PRIVATE_CONFIG_DIR}/config-$(hostname).json"
if [ ! -f "$CONFIG_FILE" ]; then
    echo "--> ERROR: Could not find config file: $CONFIG_FILE"
    exit 1
fi
PROVISION_LIST=$(jq -r '.provision_list[]' "$CONFIG_FILE")

# 4. Run Main Engine
export GITHUB_USER
export GITHUB_TOKEN=$GITHUB_PAT
sudo -E bash /opt/Hyperion/provisioner/hyperion-engine.sh $CONFIG_FILE

# 5. Generate the kustomization.yaml "Shopping List"
echo "--> Generating GitOps configuration..."
KUSTOMIZATION_PATH="${PRIVATE_CONFIG_DIR}/clusters/$(hostname)/kustomization.yaml"
mkdir -p "$(dirname "$KUSTOMIZATION_PATH")"

# Start the file with the base platform include
cat <<EOF > "$KUSTOMIZATION_PATH"
# This file was auto-generated by the Hyperion engine.
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  # Always include the base platform from the public repo
  - ${PUBLIC_REPO_URL}/kubernetes/base?ref=main
EOF


# Add each user-selected application from their list
for app in $PROVISION_LIST; do
  # We skip core components that are part of the 'base'
  if [[ "$app" != "system-init" && "$app" != "cgroup-fix" && "$app" != "k3s" && "$app" != "calico" && "$app" != "metallb" && "$app" != "ingress-nginx" && "$app" != "cert-manager" && "$app" != "flux" ]]; then
    echo "  - ${PUBLIC_REPO_URL}/kubernetes/apps/${app}?ref=main" >> "$KUSTOMIZATION_PATH"
  fi
done

# 6. Commit and Push the new Configuration
echo "--> Committing auto-generated configuration to your private repository..."
cd "$PRIVATE_CONFIG_DIR"
# Set a temporary author identity JUST for this one commit.
# This prevents the "Author identity unknown" error.
git config user.name "Hyperion Engine"
git config user.email "bot@hyperion-engine"
git add .
if ! git diff --staged --quiet; then
    git commit -m "feat: Auto-generate kustomization for $(hostname)"
    git push
fi
cd ~ # Return to home directory

# 7. Custom Configurations
echo "  ---------> Applying User Component Configurations <---------  "
sudo bash /usr/local/bin/component-configs.sh

# 8. Bootstrap Flux
echo "--> Handing off control to FluxCD..."
export GITHUB_TOKEN=$GITHUB_PAT
flux bootstrap github \
  --owner="$GITHUB_USER" \
  --repository=Hyperion-Config \
  --branch=main \
  --path=./clusters/$(hostname) \
  --personal

echo "--> GitOps engine is now online and managing your cluster."