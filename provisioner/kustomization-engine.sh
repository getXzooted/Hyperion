#!/bin/bash
# kustomization-engine.sh
# Auto-generates the FluxCD kustomization from a provision list.
set -e

# --- Configuration ---
# This script receives the config file path as an argument from its parent.
CONFIG_FILE="$1"
PRIVATE_CONFIG_DIR=$(dirname "$CONFIG_FILE")
PUBLIC_REPO_URL="https://github.com/getXzooted/Hyperion"

# --- Main Logic ---
if [ ! -f "$CONFIG_FILE" ]; then
    echo "--> ERROR: Engine received an invalid config file path."
    exit 1
fi

PROVISION_LIST=$(jq -r '.provision_list[]' "$CONFIG_FILE")

# Generate the kustomization.yaml "Shopping List"
echo "--> Generating GitOps configuration..."
KUSTOMIZATION_PATH="${PRIVATE_CONFIG_DIR}/clusters/$(hostname)/kustomization.yaml"
mkdir -p "$(dirname "$KUSTOMIZATION_PATH")"

# Start the file with the base platform
cat <<EOF > "$KUSTOMIZATION_PATH"
# This file was auto-generated by the Hyperion engine.
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - ${PUBLIC_REPO_URL}/kubernetes/base?ref=main
EOF

# Add each user-selected application from their list
for app in $PROVISION_LIST; do
  if [[ "$app" != "system-init" && "$app" != "cgroup-fix" && "$app" != "k3s" && "$app" != "calico" && "$app" != "metallb" && "$app" != "ingress-nginx" && "$app" != "cert-manager" && "$app" != "flux" ]]; then
    echo "  - ${PUBLIC_REPO_URL}/kubernetes/apps/${app}?ref=main" >> "$KUSTOMIZATION_PATH"
  fi
done

# Commit and Push the new Configuration
echo "--> Committing auto-generated configuration to your private repository..."
cd "$PRIVATE_CONFIG_DIR"
# Set a temporary author identity JUST for this one commit.
# This prevents the "Author identity unknown" error.
git config user.name "Hyperion Engine"
git config user.email "bot@hyperion-engine"
git add .
if ! git diff --staged --quiet; then
    git commit -m "feat: Auto-generate kustomization for $(hostname)"
    git push
fi
cd ~